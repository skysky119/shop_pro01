var generic = generic || {};
(function($) {
  /**
   * Adjustable Time behavior.
   */
  Drupal.behaviors.adjustableTime = {
    attach: function(context) {
      window.signOutTimer = null;
      window.sessionIdlePopupTimer = null;
      window.sessionTimeoutCountDownTimer = null;

      // When session is idle for below mentioned minutes, user is logged out. Value should be in minutes.
      var signOutDuration = 15;

      // Session time-out alert is displayed before the below mentioned seconds from the actual time-out. Value should be in seconds.
      var sessionTimeoutRemainingTimeInSec = 20;

      // Convert seconds to minutes
      var sessionTimeoutRemainingTimeInMin = sessionTimeoutRemainingTimeInSec / 60;

      function getCookieValue(a, b) {
        b = document.cookie.match('(^|;)\\s*' + a + '\\s*=\\s*([^;]+)');
        return b ? b.pop() : '';
      }

      // Log out user after 15 minutes on secure(https://) pages
      if ((document.location.protocol === 'https:') && (!getCookieValue('debug_noTimeout'))) {
        clearSignOutTimer = function() {
          if (window.signOutTimer !== null) {
            window.clearTimeout(window.signOutTimer);
          }
        };

        setSignOutTimer = function() {
          // Skip Session Timeout in SPP and MPP pages
          var path = window.location.pathname.split('/')[3];
          var isSignoutRedirectable = path === 'checkout' || (path === 'account' && !/\btimeout=1/.test(window.location.search));
          if (isSignoutRedirectable) {
            window.signOutTimer = window.setTimeout(function() {
              generic.overlay.hide();
              clearSessionCountDownTimer();
              signOutNow();
            }, signOutDuration * 60 * 1000);
          }

          if (generic.cookie('LOCALE') === 'en_US') {
            sessionIdlePopup();
          }
        };

        sessionIdlePopup = function() {
          if (window.sessionIdlePopupTimer !== null) window.clearTimeout(window.sessionIdlePopupTimer);
          window.sessionIdlePopupTimer = window.setTimeout(function() {

            // User needs to be reminded of session time-out only if he is logged-in
            if (!isUserSignedIn) return false;

            var $sessionIdlePopUpContent = $($('script.inline-template[path="adjustable_time"]').html());
            var $sessionIdlePopUp = $("<div/>").append($sessionIdlePopUpContent).addClass('js-session-idle-popup-tab-order');

            // Show idle session alert pop-up
            generic.overlay.launch({
              content: $sessionIdlePopUp,
              includeBackground: true,
              includeCloseLink: true,
              cssStyle: {
                    width: '650px',
                    height: '180px',
                    padding: '25px',
                    left: 'auto',
              },
            });

            var foregroundNode =  $('#foreground-node');
            foregroundNode.focus();
            site.restrict_navigation(foregroundNode);

            $.fn.escape = function(callback) {
              return this.each(function() {
                $(document).on("keydown", this, function(e) {
                  var keycode = ((typeof e.keyCode != 'undefined' && e.keyCode) ? e.keyCode : e.which);
                  if (keycode === 32) {
                    callback.call(this, e);
                  };
                });
              });
            };

            $('.js-session-idle-popup-tab-order').escape(function() {
              $('.js-session-idle-popup-logout').trigger('click');
            });

            // Lets show countdown for the user to choose his options in sign-out alert pop-up
            clearSessionCountDownTimer();

            var sessionTimeoutCountDownCntr = 0,
              $sessionTimeoutCounter = $('.js-session-timeout-count-down', foregroundNode);

            $sessionTimeoutCounter.text(sessionTimeoutRemainingTimeInSec);
            window.sessionTimeoutCountDownTimer = window.setInterval(function() {
              sessionTimeoutCountDownCntr++;
              var sessionTimeoutString = sessionTimeoutRemainingTimeInSec - sessionTimeoutCountDownCntr;
              if (sessionTimeoutString > -1) {
                $sessionTimeoutCounter.text(sessionTimeoutString);
              }
            }, 1000);
          }, (signOutDuration - sessionTimeoutRemainingTimeInMin) * 60 * 1000);
        };

        var clearSessionCountDownTimer = function() {
          if (window.sessionTimeoutCountDownTimer !== null) window.clearInterval(window.sessionTimeoutCountDownTimer);
        };

        // Sign-out destination URL
        var signOutNow = function() {
            if (!isUserSignedIn) return false;
            document.location.href = '/account/signin.tmpl?_SUBMIT=signout&timeout=1';
        };

        sessionExtend = function() {
          generic.overlay.hide();
          clearSessionCountDownTimer();
          clearSignOutTimer();
          setSignOutTimer();

          // RPC Sent to Retain Session
          generic.jsonrpc.fetch({
            method: 'session.get',
            onSuccess: function() {
              // We have extended the session
            }
          });
        };
        var isUserSignedIn;
	generic.jsonrpc.fetch({
               "method":   "user.json",
               "params":   [{}],
               "onSuccess" : function(response) {
                 // set a body class attribute based on user logged in status
                 isUserSignedIn = (response.getValue().signed_in === 1);
               },
               "onFailure" : function() { isUserSignedIn = false; }
             });

        // On page load clear any time-outs and start ticking a new one
        clearSignOutTimer();
        setSignOutTimer();

        // Append the session time-out alert pop-up box
        $(document).ready(function() {
          var $body = $('body');

          // "Logout" CTA from session time-out alert pop-up
          $body.on('click', '.js-session-idle-popup-logout', function() {
            signOutNow();
          });
          // "Stay connected" CTA from session time-out alert pop-up
          $body.on('click', '.js-session-idle-popup-retain-session', function() {
            sessionExtend();
          });
        });
      }
    }
  };
})(jQuery);
